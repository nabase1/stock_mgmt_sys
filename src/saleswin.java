
import com.sun.glass.events.KeyEvent;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import javax.swing.RowFilter;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author USER
 */
public class saleswin extends javax.swing.JFrame {

   Admin dbConnection = new Admin();
   int xmouse,ymouse;
   
    public saleswin() {
        initComponents();
       // AutoCompleteDecorator.decorate(nameCombo);
       getShopInfo(); 
       showdate();
        showtime();
        receiptgenbtn.setEnabled(false);
        //populateCombo();
        queryToContent();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        rembtn = new javax.swing.JButton();
        clearbtn = new javax.swing.JButton();
        receiptgenbtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        addbtn = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        receiptarea = new javax.swing.JTextArea();
        jLabel16 = new javax.swing.JLabel();
        salepersonid = new javax.swing.JLabel();
        datelb = new javax.swing.JLabel();
        timelb = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        nametxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        quantititxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        seacrhnumtxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        itemnumtxt = new javax.swing.JTextField();
        changetxt = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        paytxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        stockqunttxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tptxt = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        unitpricetxt = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        totalpricetxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        itemnametxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        priceentertxt = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        phonelb = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        addresslb = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        discountlb = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        contenttable = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        datelb2 = new javax.swing.JLabel();
        datelb1 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setOpaque(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        rembtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Reduce_50px.png"))); // NOI18N
        rembtn.setBorder(null);
        rembtn.setOpaque(false);
        rembtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rembtnActionPerformed(evt);
            }
        });

        clearbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Clear_Shopping_Cart_50px.png"))); // NOI18N
        clearbtn.setBorder(null);
        clearbtn.setOpaque(false);
        clearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbtnActionPerformed(evt);
            }
        });

        receiptgenbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Receipt_50px.png"))); // NOI18N
        receiptgenbtn.setBorder(null);
        receiptgenbtn.setOpaque(false);
        receiptgenbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptgenbtnActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Logout_Rounded_Left_50px.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.setOpaque(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        addbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Add_Shopping_Cart_50px.png"))); // NOI18N
        addbtn.setBorder(null);
        addbtn.setOpaque(false);
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setText("      REMOVE");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel24.setText("  ADD TO CART");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel25.setText("   CLEAR CART");

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel26.setText("      RECEIPT");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel27.setText("       LOG OUT");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(addbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                .addComponent(rembtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(clearbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(receiptgenbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(addbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(rembtn, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(clearbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(receiptgenbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        receiptarea.setEditable(false);
        receiptarea.setColumns(20);
        receiptarea.setRows(5);
        jScrollPane2.setViewportView(receiptarea);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Male_User_50px.png"))); // NOI18N

        salepersonid.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        salepersonid.setText("zak");

        datelb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        datelb.setText("Date");

        timelb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        timelb.setText("time");

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Num", "Item Name", "Unit Price", "Quantity", "Total Price", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setOpaque(false);
        jScrollPane1.setViewportView(jTable1);

        nametxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nametxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nametxtKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Item Name");

        quantititxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        quantititxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                quantititxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantititxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                quantititxtKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Quantity");

        seacrhnumtxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        seacrhnumtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                seacrhnumtxtKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Item No.");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        itemnumtxt.setEditable(false);
        itemnumtxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        itemnumtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemnumtxtActionPerformed(evt);
            }
        });

        changetxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Total Price");

        paytxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        paytxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                paytxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                paytxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                paytxtKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Total price");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Stock quantity");

        stockqunttxt.setEditable(false);
        stockqunttxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Item Num");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Unit Price");

        tptxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Item Name");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("GHC");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setText("GHC");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Change");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("GHC");

        unitpricetxt.setEditable(false);
        unitpricetxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("GHC");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setText("GHC");

        totalpricetxt.setEditable(false);
        totalpricetxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("GHC");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setText("Enter Price");

        itemnametxt.setEditable(false);
        itemnametxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Receive Cash");

        priceentertxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        priceentertxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                priceentertxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceentertxtKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(9, 9, 9)
                        .addComponent(stockqunttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(39, 39, 39)
                        .addComponent(itemnumtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(32, 32, 32)
                        .addComponent(itemnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(46, 46, 46)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel11)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(unitpricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(priceentertxt, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(totalpricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(paytxt, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tptxt, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jLabel13)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(changetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(1, 1, 1))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(unitpricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(priceentertxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(paytxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(totalpricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(changetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(itemnumtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(itemnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(stockqunttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(tptxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel28.setOpaque(true);

        jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel29.setOpaque(true);

        jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jLabel30.setOpaque(true);

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Time_50px.png"))); // NOI18N

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Calendar_50px.png"))); // NOI18N

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel33.setText("Phone");

        phonelb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        phonelb.setText("+233 553181665");

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel34.setText("Address");

        addresslb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addresslb.setText("BUGASE ICELAND");

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel35.setText("Discount");

        discountlb.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel37.setText("%");

        contenttable.setAutoCreateRowSorter(true);
        contenttable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        contenttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        contenttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contenttableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                contenttableMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(contenttable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 734, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seacrhnumtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel16)
                                .addGap(3, 3, 3)
                                .addComponent(salepersonid, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel32)
                                .addGap(2, 2, 2)
                                .addComponent(datelb, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel31)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(timelb, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(jLabel30)
                                .addGap(10, 10, 10))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(quantititxt, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel33)
                                .addGap(30, 30, 30)
                                .addComponent(phonelb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel34)
                                .addGap(18, 18, 18)
                                .addComponent(addresslb, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(discountlb, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel37))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel31)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(salepersonid, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(datelb, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(timelb, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(seacrhnumtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantititxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phonelb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addresslb, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34))
                        .addGap(33, 33, 33)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel35)
                                    .addComponent(discountlb, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel37))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 1420, 780));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("I MIND MA BUSINESS SUPERMARKET");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, -1, 30));

        datelb2.setBackground(new java.awt.Color(102, 102, 255));
        datelb2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        datelb2.setForeground(new java.awt.Color(255, 255, 255));
        datelb2.setText(" -");
        datelb2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                datelb2MousePressed(evt);
            }
        });
        getContentPane().add(datelb2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1350, 0, 40, 30));

        datelb1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        datelb1.setForeground(new java.awt.Color(255, 255, 255));
        datelb1.setText(" X");
        datelb1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                datelb1MousePressed(evt);
            }
        });
        getContentPane().add(datelb1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 0, 30, 30));

        jLabel19.setBackground(new java.awt.Color(102, 102, 255));
        jLabel19.setOpaque(true);
        jLabel19.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel19MouseDragged(evt);
            }
        });
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel19MousePressed(evt);
            }
        });
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1420, 30));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 1420, 780));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void itemnumtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemnumtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemnumtxtActionPerformed

    private void clearbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbtnActionPerformed
       DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
       
       for(int i=jTable1.getRowCount()-1; i>=0; i--){
           
           model.removeRow(i);   
       }
          receiptgenbtn.setEnabled(false);
          receiptarea.setText("");
          tptxt.setText("");
          paytxt.setText("");
          changetxt.setText("");
        try{
            dbConnection.dbConnect();
            dbConnection.pst = dbConnection.con.prepareStatement("INSERT INTO `events`(`SalesPersonsId`, `Action`, `Date`, `Time`) VALUES (?,?,?,?)");
            dbConnection.pst.setString(1, salepersonid.getText());
            dbConnection.pst.setString(2,"Cleared Cart");
            dbConnection.pst.setString(3,datelb.getText());
            dbConnection.pst.setString(4,timelb.getText());
            
            dbConnection.pst.executeUpdate();
            
        dbConnection.dbClose();
    }catch(Exception e){
        JOptionPane.showMessageDialog(this,e);
    }
    
    }//GEN-LAST:event_clearbtnActionPerformed

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
       if(quantititxt.getText().equals("")){
           JOptionPane.showMessageDialog(this,"Please Enter quantity");
       }else{
            insertSales();
        //receiptgenbtn.setEnabled(true);
         try{
            dbConnection.dbConnect();
            dbConnection.pst = dbConnection.con.prepareStatement("INSERT INTO `events`(`SalesPersonsId`, `Action`, `Date`, `Time`) VALUES (?,?,?,?)");
            dbConnection.pst.setString(1, salepersonid.getText());
            dbConnection.pst.setString(2,"Added Item");
            dbConnection.pst.setString(3,datelb.getText());
            dbConnection.pst.setString(4,timelb.getText());
            
            dbConnection.pst.executeUpdate();
            
        dbConnection.dbClose();
    }catch(Exception e){
        JOptionPane.showMessageDialog(this,e);
    }
       }
       
    }//GEN-LAST:event_addbtnActionPerformed

    private void seacrhnumtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_seacrhnumtxtKeyReleased
       if("".equals(seacrhnumtxt.getText())){
            
            itemnumtxt.setText("");
            totalpricetxt.setText("");
            seacrhnumtxt.setText("");
            nametxt.setText("");
            quantititxt.setText("");
            priceentertxt.setText("");
        }else{
        queryProducts();
        
         if(!"".equals(stockqunttxt.getText())){
             
             if(Integer.parseInt(stockqunttxt.getText())==0){
            JOptionPane.showMessageDialog(this,"YOU ARE OUT OF STOCK");
        
            itemnumtxt.setText("");
            totalpricetxt.setText("");
            seacrhnumtxt.setText("");
            nametxt.setText("");
            quantititxt.setText("");
            itemnametxt.setText("");
            stockqunttxt.setText("");
            unitpricetxt.setText("");
            priceentertxt.setText("");
    }
            
        
    }else{
       
            itemnumtxt.setText("");
            totalpricetxt.setText("");
            nametxt.setText("");
            quantititxt.setText("");
            itemnametxt.setText("");
            stockqunttxt.setText("");
            unitpricetxt.setText("");
            priceentertxt.setText("");
    }
       }
    }//GEN-LAST:event_seacrhnumtxtKeyReleased

    private void quantititxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantititxtKeyReleased
          double discount = Double.parseDouble(discountlb.getText());
          
        if(quantititxt.getText().equals("")){
            totalpricetxt.setText("");
        }else{
            
            int stockqun = Integer.parseInt(stockqunttxt.getText());
            Double unitp = Double.parseDouble(unitpricetxt.getText());
            int quant = Integer.parseInt(quantititxt.getText());
            double newunitp = unitp - (discount/100)*unitp;
            if(quant > stockqun){
                int confirm = JOptionPane.showConfirmDialog(this,"Stock Available is "+ " " +Integer.toString(stockqun)+"\n"+"Do You Want Sell it out");
                if(confirm==JOptionPane.YES_OPTION){
                    quantititxt.setText(stockqunttxt.getText());
                    Double totalp = unitp*quant;
                    totalpricetxt.setText(String.format("%.2f",totalp));
                }else{
                    itemnumtxt.setText("");
                    totalpricetxt.setText("");
                    nametxt.setText("");
                    quantititxt.setText("");
                    itemnametxt.setText("");
                    stockqunttxt.setText("");
                    unitpricetxt.setText("");
                    priceentertxt.setText("");
                    seacrhnumtxt.setText("");
            
             }
            }else{
                    Double totalp = newunitp*quant;
                    totalpricetxt.setText(String.format("%.2f",totalp));
            
             }
        }
    }//GEN-LAST:event_quantititxtKeyReleased

    private void paytxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paytxtKeyReleased
      if("".equals(paytxt.getText())){
          changetxt.setText("");
      }else{
          
           if(Double.parseDouble(paytxt.getText()) >= Double.parseDouble(tptxt.getText())){
              receiptgenbtn.setEnabled(true);
          }else{
              receiptgenbtn.setEnabled(false);
          }
           
          Double totalprice = Double.parseDouble(tptxt.getText());
          Double pay = Double.parseDouble(paytxt.getText());
          changetxt.setText(String.format("%.2f",(pay-totalprice))); 
          
         
      }
   
    }//GEN-LAST:event_paytxtKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         try{
        dbConnection.dbConnect();
        dbConnection.pst = dbConnection.con.prepareStatement("INSERT INTO `events`( `SalesPersonsId`,`Action`, `Date`,`Time`) VALUES (?,?,?,?)");
            dbConnection.pst.setString(1, salepersonid.getText());
            dbConnection.pst.setString(2,"Logged Out");
            dbConnection.pst.setString(3,datelb.getText());
            dbConnection.pst.setString(4,timelb.getText());
            
            dbConnection.pst.executeUpdate();
            
        dbConnection.dbClose();
    }catch(Exception e){
        JOptionPane.showMessageDialog(this,e);
    }
         this.dispose();
         mainwin mainform = new mainwin();
         mainform.setVisible(true);
                 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void datelb1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datelb1MousePressed
         try{
        dbConnection.dbConnect();
        dbConnection.pst = dbConnection.con.prepareStatement("INSERT INTO `events`( `SalesPersonsId`, `Action`, `Date`, `Time`) "
                + " VALUES (?,?,?,?)");
            dbConnection.pst.setString(1, salepersonid.getText());
            dbConnection.pst.setString(2,"Closed");
            dbConnection.pst.setString(3,datelb.getText());
            dbConnection.pst.setString(4,timelb.getText());
            
            dbConnection.pst.executeUpdate();
            
        dbConnection.dbClose();
    }catch(Exception e){
        JOptionPane.showMessageDialog(this,e);
    }
        
        this.dispose();
    }//GEN-LAST:event_datelb1MousePressed

    private void datelb2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datelb2MousePressed
         this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_datelb2MousePressed

    private void jLabel19MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-xmouse,y-ymouse);
    }//GEN-LAST:event_jLabel19MouseDragged

    private void rembtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rembtnActionPerformed
        removesales();
         try{
            dbConnection.dbConnect();
            dbConnection.pst = dbConnection.con.prepareStatement("INSERT INTO `events`(`SalesPersonsId`, `Action`, `Date`, `Time`) VALUES (?,?,?,?)");
            dbConnection.pst.setString(1, salepersonid.getText());
            dbConnection.pst.setString(2,"Removed Item");
            dbConnection.pst.setString(3,datelb.getText());
            dbConnection.pst.setString(4,timelb.getText());
            
            dbConnection.pst.executeUpdate();
            
        dbConnection.dbClose();
    }catch(Exception e){
        JOptionPane.showMessageDialog(this,e);
    }
    }//GEN-LAST:event_rembtnActionPerformed

    private void receiptgenbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptgenbtnActionPerformed
   
        receipt();
       DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        try{
            dbConnection.dbConnect();
            dbConnection.pst = dbConnection.con.prepareStatement("INSERT INTO `events`(`SalesPersonsId`, `Action`, `Date`, `Time`) VALUES (?,?,?,?)");
            dbConnection.pst.setString(1, salepersonid.getText());
            dbConnection.pst.setString(2,"Generated Receipt");
            dbConnection.pst.setString(3,datelb.getText());
            dbConnection.pst.setString(4,timelb.getText());
            
            dbConnection.pst.executeUpdate();
            
        dbConnection.dbClose();
    }catch(Exception e){
        JOptionPane.showMessageDialog(this,e);
    }
        
         int confirm = JOptionPane.showConfirmDialog(this,"DO YOU WANT TO PRINT THE RECEIPT?", "QUESTION", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
           if(confirm== JOptionPane.YES_OPTION){
                 try{
                    boolean complete = receiptarea.print();
                    if(complete){
                        JOptionPane.showMessageDialog(this,"Printed","", INFORMATION_MESSAGE);

                    }else{
                        JOptionPane.showMessageDialog(this, "Error Couldnt Print","",ERROR_MESSAGE);
                    }
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(this,e.getMessage());
                    }
                 
                 for(int i=jTable1.getRowCount()-1; i>=0; i--){
           
                    model.removeRow(i);   
                }

                   receiptarea.setText("");
                   tptxt.setText("");
                   paytxt.setText("");
                   changetxt.setText("");
           }else{
               for(int i=jTable1.getRowCount()-1; i>=0; i--){
           
                    model.removeRow(i);   
                }

                   receiptarea.setText("");
                   tptxt.setText("");
                   paytxt.setText("");
                   changetxt.setText("");
           }
        
         
    }//GEN-LAST:event_receiptgenbtnActionPerformed

    private void priceentertxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceentertxtKeyTyped
       char c = evt.getKeyChar();
        if(Character.isLetter(c)&&!evt.isAltDown()){
            getToolkit().beep();
            evt.consume();
        }
        else{
            
        }
    }//GEN-LAST:event_priceentertxtKeyTyped

    private void quantititxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantititxtKeyTyped
       char c = evt.getKeyChar();
        if(Character.isLetter(c)&&!evt.isAltDown()){
            getToolkit().beep();
            evt.consume();
        }
        else{
            
        }
    }//GEN-LAST:event_quantititxtKeyTyped

    private void paytxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paytxtKeyTyped
        char c = evt.getKeyChar();
        if(Character.isLetter(c)&&!evt.isAltDown()){
            getToolkit().beep();
            evt.consume();
        }
        else{
            
        }
    }//GEN-LAST:event_paytxtKeyTyped

    private void priceentertxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceentertxtKeyReleased
       
        if(quantititxt.getText().equals("")){
            unitpricetxt.setText(priceentertxt.getText());
        }else{
            if(priceentertxt.getText().equals("")){
                
            }else{
                 unitpricetxt.setText(priceentertxt.getText());
                 Double unitp = Double.parseDouble(unitpricetxt.getText());
                 int quant = Integer.parseInt(quantititxt.getText());

                 Double totalp = unitp*quant;
                 totalpricetxt.setText(String.format("%.2f",totalp));
            }
           
        }
        
    }//GEN-LAST:event_priceentertxtKeyReleased

    private void nametxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nametxtKeyReleased
        
        query(nametxt.getText());
        /*
       if("".equals(nametxt.getText())){
            
            itemnumtxt.setText("");
            totalpricetxt.setText("");
            seacrhnumtxt.setText("");
            nametxt.setText("");
            quantititxt.setText("");
            priceentertxt.setText("");
        }else{
        queryProductsName();
        
         if(!"".equals(stockqunttxt.getText())){
             
             if(Integer.parseInt(stockqunttxt.getText())==0){
            JOptionPane.showMessageDialog(this,"YOU ARE OUT OF STOCK");
        
            itemnumtxt.setText("");
            totalpricetxt.setText("");
            seacrhnumtxt.setText("");
            nametxt.setText("");
            quantititxt.setText("");
            itemnametxt.setText("");
            stockqunttxt.setText("");
            unitpricetxt.setText("");
            priceentertxt.setText("");
    }
            
        
    }else{
       
            itemnumtxt.setText("");
            totalpricetxt.setText("");
            nametxt.setText("");
            quantititxt.setText("");
            itemnametxt.setText("");
            stockqunttxt.setText("");
            unitpricetxt.setText("");
            priceentertxt.setText("");
    }
       }
        */
    }//GEN-LAST:event_nametxtKeyReleased

    private void jLabel19MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MousePressed
        xmouse = evt.getX();
        ymouse = evt.getY();
    }//GEN-LAST:event_jLabel19MousePressed

    private void contenttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contenttableMouseClicked
          try{
            dbConnection.dbConnect();
            dbConnection.pst = dbConnection.con.prepareStatement("SELECT * FROM products WHERE productsid=?");
            dbConnection.pst.setString(1,contenttable.getValueAt(contenttable.getSelectedRow(), 0).toString());

            dbConnection.rs = dbConnection.pst.executeQuery();
            if(dbConnection.rs.next()){
                nametxt.setText(dbConnection.rs.getString("productname"));
                itemnumtxt.setText(dbConnection.rs.getString("productsid"));
                itemnametxt.setText(dbConnection.rs.getString("productname"));
                stockqunttxt.setText((dbConnection.rs.getString("quantity")));
                unitpricetxt.setText(dbConnection.rs.getString("unitsellingprice"));

            }else{
                 nametxt.setText("");
                itemnumtxt.setText("");
                itemnametxt.setText("");
                stockqunttxt.setText("");
                unitpricetxt.setText("");
                priceentertxt.setText("");
            }
    }catch(Exception e){
        JOptionPane.showMessageDialog(this,e);
    }
    }//GEN-LAST:event_contenttableMouseClicked

    private void contenttableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contenttableMousePressed
        
         try{
            dbConnection.dbConnect();
            dbConnection.pst = dbConnection.con.prepareStatement("SELECT * FROM products WHERE productsid=?");
            dbConnection.pst.setString(1,contenttable.getValueAt(contenttable.getSelectedRow(), 0).toString());

            dbConnection.rs = dbConnection.pst.executeQuery();
            if(dbConnection.rs.next()){
                nametxt.setText(dbConnection.rs.getString("productname"));
                itemnumtxt.setText(dbConnection.rs.getString("productsid"));
                itemnametxt.setText(dbConnection.rs.getString("productname"));
                stockqunttxt.setText((dbConnection.rs.getString("quantity")));
                unitpricetxt.setText(dbConnection.rs.getString("unitsellingprice"));

            }else{
                 nametxt.setText("");
                itemnumtxt.setText("");
                itemnametxt.setText("");
                stockqunttxt.setText("");
                unitpricetxt.setText("");
                priceentertxt.setText("");
            }
    }catch(Exception e){
        JOptionPane.showMessageDialog(this,e);
    }
         
    }//GEN-LAST:event_contenttableMousePressed

    private void quantititxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantititxtKeyPressed
          if(evt.getKeyCode()== KeyEvent.VK_ENTER){
              if(quantititxt.getText().equals("")){
           JOptionPane.showMessageDialog(this,"Please Enter quantity");
       }else{
            insertSales();
        //receiptgenbtn.setEnabled(true);
         try{
            dbConnection.dbConnect();
            dbConnection.pst = dbConnection.con.prepareStatement("INSERT INTO `events`(`SalesPersonsId`, `Action`, `Date`, `Time`) VALUES (?,?,?,?)");
            dbConnection.pst.setString(1, salepersonid.getText());
            dbConnection.pst.setString(2,"Added Item");
            dbConnection.pst.setString(3,datelb.getText());
            dbConnection.pst.setString(4,timelb.getText());
            
            dbConnection.pst.executeUpdate();
            
        dbConnection.dbClose();
    }catch(Exception e){
        JOptionPane.showMessageDialog(this,e);
    }
       }
          }
    }//GEN-LAST:event_quantititxtKeyPressed

    private void paytxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paytxtKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
             receipt();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
             try{
                 dbConnection.dbConnect();
                 dbConnection.pst = dbConnection.con.prepareStatement("INSERT INTO `events`(`SalesPersonsId`, `Action`, `Date`, `Time`) VALUES (?,?,?,?)");
                 dbConnection.pst.setString(1, salepersonid.getText());
                 dbConnection.pst.setString(2,"Generated Receipt");
                 dbConnection.pst.setString(3,datelb.getText());
                 dbConnection.pst.setString(4,timelb.getText());

                 dbConnection.pst.executeUpdate();

             dbConnection.dbClose();
         }catch(Exception e){
             JOptionPane.showMessageDialog(this,e);
         }

              int confirm = JOptionPane.showConfirmDialog(this,"DO YOU WANT TO PRINT THE RECEIPT?", "QUESTION", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if(confirm== JOptionPane.YES_OPTION){
                      try{
                         boolean complete = receiptarea.print();
                         if(complete){
                             JOptionPane.showMessageDialog(this,"Printed","", INFORMATION_MESSAGE);

                         }else{
                             JOptionPane.showMessageDialog(this, "Error Couldnt Print","",ERROR_MESSAGE);
                         }
                         }catch(Exception e){
                             JOptionPane.showMessageDialog(this,e.getMessage());
                         }

                      for(int i=jTable1.getRowCount()-1; i>=0; i--){

                         model.removeRow(i);   
                     }

                        receiptarea.setText("");
                        tptxt.setText("");
                        paytxt.setText("");
                        changetxt.setText("");
                }else{
                    for(int i=jTable1.getRowCount()-1; i>=0; i--){

                         model.removeRow(i);   
                     }

                        receiptarea.setText("");
                        tptxt.setText("");
                        paytxt.setText("");
                        changetxt.setText("");
                }

        }
    }//GEN-LAST:event_paytxtKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(saleswin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(saleswin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(saleswin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(saleswin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new saleswin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JLabel addresslb;
    private javax.swing.JLabel changetxt;
    private javax.swing.JButton clearbtn;
    private javax.swing.JTable contenttable;
    private javax.swing.JLabel datelb;
    private javax.swing.JLabel datelb1;
    private javax.swing.JLabel datelb2;
    private javax.swing.JLabel discountlb;
    private javax.swing.JTextField itemnametxt;
    private javax.swing.JTextField itemnumtxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nametxt;
    private javax.swing.JTextField paytxt;
    private javax.swing.JLabel phonelb;
    private javax.swing.JTextField priceentertxt;
    private javax.swing.JTextField quantititxt;
    private javax.swing.JTextArea receiptarea;
    private javax.swing.JButton receiptgenbtn;
    private javax.swing.JButton rembtn;
    private javax.swing.JLabel salepersonid;
    private javax.swing.JTextField seacrhnumtxt;
    private javax.swing.JTextField stockqunttxt;
    private javax.swing.JLabel timelb;
    private javax.swing.JTextField totalpricetxt;
    private javax.swing.JLabel tptxt;
    private javax.swing.JTextField unitpricetxt;
    // End of variables declaration//GEN-END:variables

    
    
 public void showdate(){
        Date d = new Date();
        SimpleDateFormat s = new SimpleDateFormat("dd-MM-yyyy");
        datelb.setText(s.format(d));
    }
    
    public void showtime(){
        new Timer(0,new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                Date d = new Date();
                SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss a");
                timelb.setText(s.format(d));
            }
        }).start();
    }
    
    
    
public void queryProducts(){
    
    try{
        dbConnection.dbConnect();
        dbConnection.pst = dbConnection.con.prepareStatement("SELECT * FROM products WHERE productsid=?");
        dbConnection.pst.setString(1,seacrhnumtxt.getText());
        
        dbConnection.rs = dbConnection.pst.executeQuery();
        if(dbConnection.rs.next()){
            nametxt.setText(dbConnection.rs.getString("productname"));
            itemnumtxt.setText(dbConnection.rs.getString("productsid"));
            itemnametxt.setText(dbConnection.rs.getString("productname"));
            stockqunttxt.setText((dbConnection.rs.getString("quantity")));
            unitpricetxt.setText(dbConnection.rs.getString("unitsellingprice"));
            
        }else{
             nametxt.setText("");
            itemnumtxt.setText("");
            itemnametxt.setText("");
            stockqunttxt.setText("");
            unitpricetxt.setText("");
            priceentertxt.setText("");
        }
    }catch(Exception e){
        JOptionPane.showMessageDialog(this,e);
    }
   
}

public void queryProductsName(){
    
    try{
        dbConnection.dbConnect();
        dbConnection.pst = dbConnection.con.prepareStatement("SELECT * FROM products WHERE productname=?");
        dbConnection.pst.setString(1,nametxt.getText());
        
        dbConnection.rs = dbConnection.pst.executeQuery();
        if(dbConnection.rs.next()){
            seacrhnumtxt.setText(dbConnection.rs.getString("productsid"));
            nametxt.setText(dbConnection.rs.getString(""+"productname"));
            itemnumtxt.setText(dbConnection.rs.getString("productsid"));
            itemnametxt.setText(dbConnection.rs.getString("productname"));
            stockqunttxt.setText((dbConnection.rs.getString("quantity")));
            unitpricetxt.setText(dbConnection.rs.getString("unitsellingprice"));
            
        }else{
            seacrhnumtxt.setText("");
            itemnumtxt.setText("");
            itemnametxt.setText("");
            stockqunttxt.setText("");
            unitpricetxt.setText("");
            priceentertxt.setText("");
        }
    }catch(Exception e){
        JOptionPane.showMessageDialog(this,e);
    }
   
}

public void queryToContent(){
    
    try{
        dbConnection.dbConnect();
        dbConnection.pst = dbConnection.con.prepareStatement("SELECT productsid,productname FROM products");
        
        dbConnection.rs = dbConnection.pst.executeQuery();
        contenttable.setModel(DbUtils.resultSetToTableModel(dbConnection.rs));
        
    }catch(Exception e){
        JOptionPane.showMessageDialog(this,e);
    }
   
}
    

    
public void insertSales(){
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    int qunt,currentQuantity;
    int quantity = Integer.parseInt(quantititxt.getText());
    Double totalp,unitp,profit;
    totalp = Double.parseDouble(totalpricetxt.getText());
    try{
        dbConnection.dbConnect();
        
        dbConnection.pst = dbConnection.con.prepareStatement("SELECT * FROM products WHERE productsid=?");
        dbConnection.pst.setString(1, seacrhnumtxt.getText());
        
        dbConnection.rs = dbConnection.pst.executeQuery();
        if(dbConnection.rs.next()){
            qunt = Integer.parseInt(dbConnection.rs.getString("quantity"));
            unitp =Double.parseDouble(dbConnection.rs.getString("unitcostprice"));
            profit = totalp-(quantity*unitp);
            
            
            currentQuantity = qunt-quantity;
            dbConnection.pst = dbConnection.con.prepareStatement("UPDATE products SET quantity=? WHERE productsid=?");
            
            dbConnection.pst.setInt(1, currentQuantity);
            dbConnection.pst.setString(2,seacrhnumtxt.getText());
            
            dbConnection.pst.executeUpdate();
            
            dbConnection.pst = dbConnection.con.prepareStatement("INSERT INTO `sales`( `SalesPersonsId`, `ProductsId`, `Quantity`, `Amount`, `Profit`, `Date`,`time`)"
                    + " VALUES (?,?,?,?,?,?,?)");
            
            dbConnection.pst.setString(1,salepersonid.getText());
            dbConnection.pst.setString(2,itemnumtxt.getText());
            dbConnection.pst.setInt(3,quantity);
            dbConnection.pst.setString(4,totalpricetxt.getText());
            dbConnection.pst.setDouble(5, profit);
            dbConnection.pst.setString(6,datelb.getText());
            dbConnection.pst.setString(7,timelb.getText());
            
            dbConnection.pst.executeUpdate();
            insertEvents();
            model.addRow(new Object[]{itemnumtxt.getText(),itemnametxt.getText(),unitpricetxt.getText(),quantititxt.getText(),totalpricetxt.getText(),timelb.getText()});
             dbConnection.dbClose();

            itemnumtxt.setText("");
            totalpricetxt.setText("");
            seacrhnumtxt.setText("");
            nametxt.setText("");
            quantititxt.setText("");
            itemnametxt.setText("");
            stockqunttxt.setText("");
            unitpricetxt.setText("");
            priceentertxt.setText("");
        }
       sumup();
    }catch(Exception e){
        JOptionPane.showMessageDialog(this,e);
    }
}

public void removesales(){
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    int qunt,currentQuantity;
    int itemqunt = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
    
    try{
        dbConnection.dbConnect();
   
        dbConnection.pst = dbConnection.con.prepareStatement("SELECT * FROM products WHERE productsid=?");
        dbConnection.pst.setString(1, jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        
        dbConnection.rs = dbConnection.pst.executeQuery();
        if(dbConnection.rs.next()){
            qunt = Integer.parseInt(dbConnection.rs.getString("quantity"));
            currentQuantity = qunt+itemqunt;
            
            dbConnection.pst = dbConnection.con.prepareStatement("UPDATE products SET quantity=? WHERE productsid=?");
            
            dbConnection.pst.setInt(1, currentQuantity);
            dbConnection.pst.setString(2,jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
            
            dbConnection.pst.executeUpdate();
            
           dbConnection.pst = dbConnection.con.prepareStatement("DELETE FROM sales WHERE productsid=? AND time=? AND date=?"); 
            dbConnection.pst.setString(1,jTable1.getValueAt(jTable1.getSelectedRow(),0).toString());
            dbConnection.pst.setString(2,jTable1.getValueAt(jTable1.getSelectedRow(),5).toString());
            dbConnection.pst.setString(3,datelb.getText());
            
            dbConnection.pst.executeUpdate();
            model.removeRow(jTable1.getSelectedRow());
             
            double total = 0;
            for(int i = 0; i<jTable1.getRowCount(); i++){
                double amount = Double.parseDouble(jTable1.getValueAt(i,4).toString());
                total+=amount;
            }
            tptxt.setText(String.format("%.2f", total));
                dbConnection.dbClose();
                }
    }catch(Exception e){
         JOptionPane.showMessageDialog(this,e);
    }
}

public void sumup(){
    
    double total = 0;
    for(int i = 0; i<jTable1.getRowCount(); i++){
        double amount = Double.parseDouble(jTable1.getValueAt(i,4).toString());
        total+=amount;
    }
    tptxt.setText(String.format("%.2f", total));
}


public void insertEvents(){
    
    try{
        dbConnection.dbConnect();
        dbConnection.pst = dbConnection.con.prepareStatement("INSERT INTO `events`(`SalesPersonsId`,`Action`,`Date`, `Time`)"
                + " VALUES (?,?,?,?)");
            dbConnection.pst.setString(1, salepersonid.getText());
            dbConnection.pst.setString(2,"purchased");
            dbConnection.pst.setString(3,datelb.getText());
            dbConnection.pst.setString(4,timelb.getText());
            
            dbConnection.pst.executeUpdate();
            
        dbConnection.dbClose();
    }catch(Exception e){
        JOptionPane.showMessageDialog(this,e.getMessage());
    }
}

public void receipt(){
    
     ArrayList<String> itemnum = new ArrayList<>();
     ArrayList<String> itemname = new ArrayList<>();
     ArrayList<String> itemprice = new ArrayList<>();
     ArrayList<String> itemquan = new ArrayList<>();
     ArrayList<String> totalpr = new ArrayList<>();
     
     for(int i=0; i<jTable1.getRowCount(); i++){
         itemnum.add(i, jTable1.getValueAt(i,0).toString());
         itemname.add(i, jTable1.getValueAt(i,1).toString());
         itemprice.add(i, jTable1.getValueAt(i,2).toString());
         itemquan.add(i, jTable1.getValueAt(i,3).toString());
         totalpr.add(i, jTable1.getValueAt(i,4).toString());
         
         
           receiptarea.setText(receiptarea.getText()+"\n"+itemnum.get(i)+"\t"+itemname.get(i)+"\t"+itemprice.get(i)+"\t"+itemquan.get(i)+"\t"+totalpr.get(i) );
    
     }
     
      receiptarea.setText("\t"+jLabel15.getText()+"\n\tAddress: " + addresslb.getText() +"\n\tPhone: " +phonelb.getText() +"\n\t\t\tSales Person: " +salepersonid.getText()+"\n\t\t\t"+datelb.getText()+", "+timelb.getText()+
             "\n==========================================================\n"+"Item No.\t"+"Item Name\t"+"Unit Price\t"+"Quantity\t"+"Total Price\n"+
             receiptarea.getText()+ "\n"+"==========================================================\n"
             +"Total Price: \t\t\t\t"+"GHC"+tptxt.getText()+"\nCash Recieved: \t\t\t"+"GHC"+paytxt.getText()+"\nChange: \t\t\t\t"+"GHC"+changetxt.getText()+
              "\n==========================================================\n"+"\t\tTHANK YOU!\n" );
    
 
     
      
     
}

public void getShopInfo(){
     try{
         
                dbConnection.dbConnect();
                    dbConnection.pst = dbConnection.con.prepareStatement("SELECT * FROM shop_info WHERE shop_id=?");
                    
                    dbConnection.pst.setString(1,"shop1");
                   
                    dbConnection.rs = dbConnection.pst.executeQuery();
                   if(dbConnection.rs.next()){
                 
                    jLabel15.setText(dbConnection.rs.getString(2));
                    phonelb.setText(dbConnection.rs.getString(3));
                    addresslb.setText(dbConnection.rs.getString(5));
                    discountlb.setText(String.format("%.2f", dbConnection.rs.getDouble(7)));
                }
            }catch(Exception e){
                
                JOptionPane.showMessageDialog(this, e);
            }
    
}

public void query(String filter){
    
    TableRowSorter<DefaultTableModel> tablesorter = new TableRowSorter<> ((DefaultTableModel) contenttable.getModel());
    contenttable.setRowSorter(tablesorter);
    tablesorter.setRowFilter(RowFilter.regexFilter(filter));
}

public void username(String n){
    salepersonid.setText(n);
    
    
}

}
